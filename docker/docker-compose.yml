services:
  mongodb:
    image: mongo:6
    container_name: users_db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_ROOT_AUTHSOURCE: admin
    ports:
      - "27018:27017"
    volumes:
      - mongo_usersdb_data:/data/db
    command: --bind_ip_all --auth
    networks:
      - node-network

  users_service:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.users-service
    container_name: users-service
    volumes:
      - type: bind
        source: ./qwipper-monorepo
        target: /app/qwipper-monorepo
    develop:
      watch:
        - action: rebuild
          path: ../qwipper-monorepo/services/users-service
          target: /app/qwipper-monorepo/services/users-service
    environment:
      SPRING_DEVTOOLS_RESTART_ENABLED: "true"
      SPRING_DATA_MONGODB_URI: "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_APP_DATABASE}?authSource=admin"
    ports:
      - "8085:8080"
    depends_on:
      mongodb:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - node-network

  rabbitmq:
    image: rabbitmq:4.0.8-management
    hostname: qwipper-queues
    container_name: rabbitmq
    env_file:
        - ./.env
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq-log:/var/log/rabbitmq

volumes:
  mongo_usersdb_data:
  rabbitmq-log:

  
networks:
  node-network:
    driver: bridge